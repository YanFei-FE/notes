常用函数：
    onload -------------------------------- 加载完成
    window.onload ------------------------- 当页面加载完成
    
    document.get Element By Id(‘div’).style.display = ‘block’- 获取id
    取      元素   通过                 样式
    document.getElementById(‘div’).className = ‘xxx’--------- 改css名
    document.getElementById(‘div’).href = ‘xxx’-------------- 修改路径
    document.getElementsByTagNmane ------------------------------ 选择一组元素
    document.title = ‘’----------------------------------------- 给页面的title赋值

    onmouseover --------------------------- 当鼠标滑入
    onmouseout ---------------------------- 当鼠标划出
    onclick ------------------------------- 当鼠标点击

    setInterval(函数名,时间) -------------- (间隔型)定时器，规定多长时间执行一次，不带括号毫秒                        停的在规定的时间执行
    setTimeout(函数名,时间) --------------- (延时型)定时器，只执行一次
    clearInterval(要关闭的定时器函数) ----- 关闭(间隔型)定时器
    clearTimeout(要关闭的定时器函数) ------ 关闭(延时型)定时器

    Date() -------------------------------- 时间对象
    getHours() ---------------------------- 获取系统时间的小时
    getMinutes() -------------------------- 获取系统时间的分钟
    getSeconds() -------------------------- 获取系统时间的秒
    getFullYear() ------------------------- 获取系统时间的年
    getMonth() ---------------------------- 获取系统时间的月(+1)
    getDate() ----------------------------- 获取系统时间的日
    getDay() ------------------------------ 获取系统时间的周几，0代表周日
    setDate() ----------------------------- 设置时间

    checked ------------------------------- checkbox的特殊属性(选中与否)
    chartAt() ----------------------------- 获取第几个位置的字符
    push() -------------------------------- 往数组里插入值
    getComputdStyle ----------------------- 获取的是计算机（浏览器）计算后的样式(ie7/7/8不支持)
    currentStyle --------------------------- 获取的是计算机（浏览器）计算后的样式(标准浏览器不支持)

[] == .    //Javascript中的‘.’可以用‘[]’来代替。

typeof返回值：number、string、boolean、undefined、objeck、function

js中的数据类型：数字、字符串、布尔、未定义、对象（obj、[]、{}、null）、函数

cookie
    1.用来保存信息  比如：自动登录、记住用户名
    2.cookie的特性:
        同一个网站中所有页面共享一套cookie
        数量、大小有限
        有过期时间（每条cookie都有他自己独立的过期日期）
    3.js中使用cookie  //document.cookie

try{
    //代码尝试执行这个块中的内容,如果有错误，则会执行catch{}，并且传入错误信息参数
    throw new Error('错了错了');  //手动抛错，仍会执行catch{}
}catch(e){

}

cssText
    oDiv.style.cssText = ‘width:100px; height:100px;’  文本格式化

NaN
    NaN的布尔值为false，NaN与自都不相等；
    NaN是数字类型，但不是个数字；

    var a = Nember(‘aa’);
    alert(a == a);    //假

一旦程序中出现NaN，肯定是程序中进行了非法的运算操作

isNaN 判断某些值是不是数字
    依靠NaN做转换，如果是数字返回false（isNaN(‘250’)为false），如果不是数字返回true

this
    alert(this); // 弹出[object window]

闭包

Prototype() ------- 原型

